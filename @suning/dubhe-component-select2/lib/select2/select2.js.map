{"version":3,"sources":["../../src/select2/select2.js"],"names":["select2","app","directive","$timeout","LazyLoader","setOption","element","option","restrict","scope","item","itemModel","link","attrs","hasNgModel","ngModel","hasItemModel","selectModel","SelectAdapter","$","fn","amd","require","prototype","query","params","callback","data","self","$options","$element","children","each","$option","is","matches","limitNumber","options","get","length","push","results","reset","language","ajax","escapeMarkup","markup","on","e","angular","isArray","$apply","evtName","key","$emit","undefined","id","filter","$watch","newVal","oldVal"],"mappings":"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","file":"select2.js","sourcesContent":["import * as select2 from 'select2/dist/js/select2';\r\nimport 'select2/dist/js/i18n/zh-CN';\r\nimport 'select2/dist/css/select2.min.css';\r\n\r\nexport default app => {\r\n    app.directive('select2', [\"$timeout\", \"LazyLoader\", function ($timeout, LazyLoader) {\r\n        // 防止select的ng-option等指令没有执行\r\n        function setOption(element, option) {\r\n            $timeout(function () {\r\n                element.select2(option);\r\n            }, 0);\r\n        }\r\n        return {\r\n            restrict: 'A',\r\n            // 对于普通的单选、固定备选列表的select，使用select2进行属性配置，ngModel绑定选中结果即可。\r\n            // ngModel和selectModel都会记录select的备选值。\r\n            // 区别在于ngModel会触发angular的select指令解析option，并影响select2的解析。\r\n            // 区别很微妙，需要具体问题具体分析\r\n            scope: {\r\n                select2: \"=\",\r\n                item: \"=ngModel\",\r\n                itemModel: \"=selectModel\"\r\n            },\r\n            link: function (scope, element, attrs) {\r\n                // scope.select2 = scope.select2 || {};\r\n                scope.hasNgModel = !!attrs.ngModel;\r\n                scope.hasItemModel = !!attrs.selectModel;\r\n                var SelectAdapter = $.fn.select2.amd.require('select2/data/select');\r\n                // 扩展功能配置：limitNumber\r\n                // 限制显示的备选项数量\r\n                SelectAdapter.prototype.query = function (params, callback) {\r\n                    var data = [];\r\n                    var self = this;\r\n                    var $options = this.$element.children();\r\n                    $options.each(function () {\r\n                        var $option = $(this);\r\n                        if (!$option.is('option') && !$option.is('optgroup')) {\r\n                            return;\r\n                        }\r\n                        var option = self.item($option);\r\n                        var matches = self.matches(params, option);\r\n                        if (matches !== null) {\r\n                            var limitNumber = self.options.get('limitNumber');\r\n                            (!limitNumber || limitNumber > data.length) && data.push(matches);\r\n                        }\r\n                    });\r\n                    callback({\r\n                        results: data\r\n                    });\r\n                };\r\n                // 重置select2配置\r\n                scope.select2 && (scope.select2.reset = scope.select2.reset || function () {\r\n                    setOption(element, scope.select2);\r\n                });\r\n\r\n                // 语言默认为中文（需要导入中文语言的js文件）\r\n                scope.select2 && (scope.select2.language = scope.select2.language || 'zh-CN');\r\n\r\n                // ajax处理\r\n                if (scope.select2 && scope.select2.ajax) {\r\n                    // 设置默认的ajax转换 markup函数\r\n                    scope.select2.ajax.escapeMarkup = scope.select2.ajax.escapeMarkup\r\n                        || function (markup) { return markup; };\r\n                    // 处理select和unselect事件。主要用户多选select的情况下。\r\n                    element.on('select2:select', function (e) {\r\n                        scope.hasNgModel && !angular.isArray(scope.item) && (scope.item = e.params.data);\r\n                        scope.hasItemModel &&\r\n                            (angular.isArray(scope.itemModel) ? scope.itemModel.push(e.params.data) : (scope.itemModel = e.params.data));\r\n                        scope.$apply();\r\n\r\n                        var evtName = 'sn.select2.select';\r\n                        evtName += (scope.select2 && scope.select2.key) ? ':' + scope.select2.key : '';\r\n                        scope.$emit(evtName);\r\n                    });\r\n                    // unselect需要判断当前是单选还是多选。如果是多选的话，itemModel会做数组去元素操作\r\n                    element.on('select2:unselect', function (e) {\r\n                        scope.hasNgModel && !angular.isArray(scope.item) && (scope.item = undefined);\r\n                        if (scope.hasItemModel) {\r\n                            if (angular.isArray(scope.itemModel)) {\r\n                                var id = e.params.data.id;\r\n                                scope.itemModel = scope.itemModel.filter(function (item) {\r\n                                    return item.id != id\r\n                                });\r\n                            } else {\r\n                                scope.itemModel = undefined;\r\n                            }\r\n                        }\r\n                        scope.$apply();\r\n\r\n                        var evtName = 'sn.select2.unselect';\r\n                        evtName += (scope.select2 && scope.select2.key) ? ':' + scope.select2.key : '';\r\n                        scope.$emit(evtName);\r\n                    });\r\n                };\r\n\r\n                scope.hasNgModel && scope.$watch('item', function (newVal, oldVal) {\r\n                    if (newVal && !oldVal) {\r\n                        setOption(element, scope.select2);\r\n                    }\r\n                });\r\n\r\n                // 初始化 select2\r\n                setOption(element, scope.select2);\r\n            }\r\n        }\r\n    }]);\r\n}"]}